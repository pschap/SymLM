push rbp mov ebp , esp sub esp , hexvar push hexvar call qword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , num int hexvar movabs dword ptr [ hexvar ] , eax add byte ptr [ r9 + hexvar ] , cl add byte ptr [ rcx + hexvar ] , cl add byte ptr [ rcx + hexvar ] , cl add byte ptr [ rcx + hexvar ] , cl add byte ptr [ rsi - hexvar ] , ah adc eax , hexvar mov word ptr [ rip + hexvar ] , cs mov word ptr [ rip + hexvar ] , ds mov word ptr [ rip + hexvar ] , es mov word ptr [ rip + hexvar ] , fs mov word ptr [ rip + hexvar ] , gs pushfq pop qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp ] movabs dword ptr [ hexvar ] , eax adc byte ptr [ rip + hexvar ] , al or byte ptr [ rbx + hexvar ] , ah mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , hexvar movabs eax , dword ptr [ hexvar ] add bh , al add eax , hexvar or dword ptr [ rax + rax ] , eax rol bh , num or al , num add byte ptr [ r9 ] , al add byte ptr [ rax ] , al add bh , al add eax , hexvar add dword ptr [ rax ] , eax add byte ptr [ rax ] , al mov ecx , num imul edx , ecx , num mov dword ptr [ rdx + hexvar ] , num mov eax , num imul ecx , eax , num mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rbp + rcx - num ] , edx mov eax , num shl eax , num mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rbp + rax - num ] , ecx push hexvar call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rdx ] mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , ecx mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp push hexvar call qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov ebp , esp sub esp , num push rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov byte ptr [ rbp - num ] , num jmp hexvar mov dl , byte ptr [ rbp - num ] add dl , num mov byte ptr [ rbp - num ] , dl movzx eax , byte ptr [ rbp - num ] movzx ecx , byte ptr [ rbp - num ] cmp eax , ecx jg hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] movzx ecx , byte ptr [ rbp - num ] add eax , ecx movzx edx , byte ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - num ] mov al , byte ptr [ rsi + rax + hexvar ] mov byte ptr [ rcx + rdx ] , al jmp hexvar pop rsi add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp hexvar int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp hexvar int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call hexvar ret hexvar
push rbp mov ebp , esp pop rbp ret
push rbp mov ebp , esp push rcx cmp dword ptr [ rip + hexvar ] , hexvar je hexvar movabs eax , dword ptr [ hexvar ] push qword ptr [ rax + rdx - hexvar ] or eax , hexvar not ecx mov dword ptr [ rip + hexvar ] , ecx jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - num ] and edx , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] or eax , hexvar shl eax , hexvar or eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , ecx mov edx , dword ptr [ rbp - num ] not edx mov dword ptr [ rip + hexvar ] , edx mov esp , ebp pop rbp ret
push rbp mov ebp , esp push hexvar push hexvar push num call hexvar add esp , hexvar test eax , eax je hexvar push num call hexvar pop rbp ret
push rbp mov ebp , esp push - num push hexvar movabs eax , dword ptr fs : [ hexvar ] push rsi mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar movabs eax , dword ptr [ hexvar ] hlt movabs dword ptr fs : [ hexvar ] , eax xor dword ptr [ rax ] , esi add r8b , bpl loope hexvar
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov al , byte ptr [ rax + num ] add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp push - num push hexvar push hexvar movabs eax , dword ptr fs : [ hexvar ] push rbx push rsi push rdi movabs eax , dword ptr [ hexvar ]
push rbp mov ebp , esp push rcx push rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx edx , word ptr [ rax + hexvar ] and edx , hexvar mov esi , esp mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rax + rdx * num + hexvar ] call rdx cmp esi , esp call hexvar pop rsi add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rcx ] or ecx , edx movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rdx ] , cl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar xor ecx , ecx mov edx , dword ptr [ rbp - num ] add edx , num mov dword ptr [ rdx ] , ecx mov dword ptr [ rdx + num ] , ecx mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp + num ] mov dword ptr [ rax + num ] , ecx mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret num
push rbp mov ebp , esp sub esp , hexvar movabs eax , dword ptr [ hexvar ] cld push rbx mov ebx , dword ptr [ rbp + num ] push rsi mov esi , dword ptr [ rbp + hexvar ] push rdi mov edi , dword ptr [ rip + hexvar ] cmp edi , - num je hexvar cmp byte ptr [ rsi ] , num je hexvar push rsi call hexvar add eax , hexvar add esp , num cmp eax , hexvar ja hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push rsi lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar add esp , hexvar lea eax , [ rbp - hexvar ] jmp hexvar mov eax , hexvar push rax push num push rdi push rbx call hexvar add esp , hexvar mov ecx , dword ptr [ rbp - num ] pop rdi pop rsi xor ecx , ebp pop rbx call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar mov word ptr [ rbp - num ] , cx mov edx , dword ptr [ rbp - num ] mov ax , word ptr [ rbp - num ] mov word ptr [ rdx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num push rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov byte ptr [ rbp - num ] , num jmp hexvar mov dl , byte ptr [ rbp - num ] add dl , num mov byte ptr [ rbp - num ] , dl movzx eax , byte ptr [ rbp - num ] movzx ecx , byte ptr [ rbp - num ] cmp eax , ecx jg hexvar movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] movzx eax , byte ptr [ rbp - num ] add eax , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - num ] mov dl , byte ptr [ rsi + rdx ] mov byte ptr [ rax + rcx + hexvar ] , dl jmp hexvar pop rsi add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rsi mov esi , hexvar mov eax , esi cmp eax , hexvar jae hexvar push rdi mov edi , dword ptr [ rsi ] test edi , edi je hexvar mov ecx , edi call qword ptr [ rip + hexvar ] call rdi add esi , num cmp esi , hexvar jb hexvar pop rdi pop rsi ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + hexvar ] cmp eax , num ja hexvar mov ecx , dword ptr [ rax * num + hexvar ] mov edx , dword ptr [ rax * num + hexvar ] cmp ecx , - num je hexvar push rdx push rax push rcx push qword ptr [ rbp + num ] call hexvar add esp , hexvar pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , hexvar lea ecx , [ rbp - hexvar ] call hexvar push hexvar lea eax , [ rbp - hexvar ] push rax call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , hexvar movzx eax , byte ptr [ rip + hexvar ] test eax , eax je hexvar mov al , num jmp hexvar cmp dword ptr [ rbp + num ] , num je hexvar cmp dword ptr [ rbp + num ] , num je hexvar push num call hexvar call hexvar test eax , eax je hexvar cmp dword ptr [ rbp + num ] , num jne hexvar push hexvar call hexvar add esp , num test eax , eax je hexvar xor al , al jmp hexvar push hexvar call hexvar add esp , num test eax , eax je hexvar xor al , al jmp hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , ecx mov edx , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , ecx mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , edx mov eax , dword ptr [ rbp - num ] movabs dword ptr [ hexvar ] , eax in al , hexvar push rbp cld mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , ecx mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movabs dword ptr [ hexvar ] , eax add byte ptr [ r9 ] , al mov al , num mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov dword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jae hexvar movzx edx , byte ptr [ rbp - hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ rbp - num ] add eax , dword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + hexvar ] test ecx , ecx je hexvar movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov cl , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + rdx ] , cl mov byte ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] test eax , eax jne hexvar mov ecx , dword ptr [ rbp - num ] movzx edx , word ptr [ rcx + hexvar ] sub edx , num mov eax , dword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx add esp , hexvar cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rax + num ] push rcx call hexvar add esp , num mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rdx + num ] push rax call hexvar add esp , num mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rcx ] push rdx call hexvar add esp , num call hexvar add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
movabs eax , dword ptr [ hexvar ] int3 int3 int3 int3 int3 int3 int3 movabs eax , dword ptr [ hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] cmp eax , num ja hexvar mov eax , dword ptr [ rax * num + hexvar ] pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , ecx mov ecx , dword ptr [ rbp - num ] call hexvar mov eax , dword ptr [ rbp + num ] and eax , num je hexvar push hexvar mov ecx , dword ptr [ rbp - num ] push rcx call hexvar add esp , num mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret num
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp cmp dword ptr [ rbp + num ] , num jne hexvar mov byte ptr [ rip + hexvar ] , num call hexvar call hexvar movzx eax , al test eax , eax jne hexvar xor al , al jmp hexvar call hexvar movzx ecx , al test ecx , ecx jne hexvar push num call hexvar add esp , num xor al , al jmp hexvar mov al , num pop rbp ret
push rbp mov ebp , esp push hexvar call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
mov eax , hexvar ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push num call qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp + num ] push rax call qword ptr [ rip + hexvar ] push - hexvar call qword ptr [ rip + hexvar ] push rax call qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov ebp , esp sub esp , hexvar push hexvar call qword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ rbp + num ] int hexvar movabs dword ptr [ hexvar ] , eax add byte ptr [ r9 + hexvar ] , cl add byte ptr [ rcx + hexvar ] , cl add byte ptr [ rcx + hexvar ] , cl add byte ptr [ rcx + hexvar ] , cl add byte ptr [ rsi - hexvar ] , ah adc eax , hexvar mov word ptr [ rip + hexvar ] , cs mov word ptr [ rip + hexvar ] , ds mov word ptr [ rip + hexvar ] , es mov word ptr [ rip + hexvar ] , fs mov word ptr [ rip + hexvar ] , gs pushfq pop qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp ] movabs dword ptr [ hexvar ] , eax adc byte ptr [ rip + hexvar ] , al or byte ptr [ rbx + hexvar ] , ah mov eax , dword ptr [ rbp - hexvar ] movabs eax , dword ptr [ hexvar ] add bh , al add eax , hexvar or dword ptr [ rax + rax ] , eax rol bh , num or al , num add byte ptr [ r9 ] , al add byte ptr [ rax ] , al add byte ptr [ rbx + hexvar ] , al or eax , hexvar jne hexvar mov dword ptr [ rbp + hexvar ] , num cmp dword ptr [ rbp + hexvar ] , hexvar jbe hexvar mov ecx , dword ptr [ rbp + hexvar ] sub ecx , num mov dword ptr [ rbp + hexvar ] , ecx mov edx , dword ptr [ rbp + hexvar ] add edx , num mov dword ptr [ rip + hexvar ] , edx mov eax , num imul ecx , eax , num mov edx , dword ptr [ rbp + num ] mov dword ptr [ rcx + hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] cmp ecx , dword ptr [ rbp + hexvar ] jae hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp + hexvar ] mov eax , dword ptr [ rcx + rax * num ] mov dword ptr [ rdx * num + hexvar ] , eax jmp hexvar push hexvar call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov cl , byte ptr [ rax + rdx ] mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rdx + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , num mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push num call hexvar pop rbp ret
push rbp mov ebp , esp sub esp , hexvar lea ecx , [ rbp - hexvar ] call hexvar push hexvar lea eax , [ rbp - hexvar ] push rax call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rax + num ] , num je hexvar mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rcx + num ] mov dword ptr [ rbp - num ] , edx jmp hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rdx ] imul edx , ecx , num add edx , hexvar mov eax , dword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp sub esp , hexvar push hexvar call qword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ rbp + num ] int hexvar push num call hexvar add esp , num push hexvar push num lea eax , [ rbp - hexvar ] push rax call hexvar add esp , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ebx mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edi mov word ptr [ rbp - hexvar ] , ss mov word ptr [ rbp - hexvar ] , cs mov word ptr [ rbp - hexvar ] , ds mov word ptr [ rbp - hexvar ] , es mov word ptr [ rbp - hexvar ] , fs mov word ptr [ rbp - hexvar ] , gs pushfq pop qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , hexvar mov ecx , dword ptr [ rbp + num ] mov dword ptr [ rbp - hexvar ] , ecx lea edx , [ rbp + num ] mov dword ptr [ rbp - hexvar ] , edx lea eax , [ rbp + num ] mov ecx , dword ptr [ rax - num ] mov dword ptr [ rbp - hexvar ] , ecx push hexvar push num lea edx , [ rbp - hexvar ] push rdx call hexvar add esp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp + num ] mov dword ptr [ rbp - hexvar ] , eax call qword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov byte ptr [ rbp - num ] , num mov cl , byte ptr [ rbp - num ] mov byte ptr [ rbp - num ] , cl lea edx , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , edx lea eax , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax push num call qword ptr [ rip + hexvar ] lea ecx , [ rbp - hexvar ] push rcx call qword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar movzx edx , byte ptr [ rbp - num ] test edx , edx jne hexvar push num call hexvar add esp , num mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rcx lea ecx , [ rsp + num ] sub ecx , eax sbb eax , eax not eax and ecx , eax mov eax , esp and eax , hexvar cmp ecx , eax jb hexvar mov eax , ecx pop rcx xchg eax , esp mov eax , dword ptr [ rax ] mov dword ptr [ rsp ] , eax ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov cl , byte ptr [ rax + hexvar ] sub cl , num mov edx , dword ptr [ rbp - num ] mov byte ptr [ rdx + hexvar ] , cl mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov cx , word ptr [ rax + rcx * num + hexvar ] mov word ptr [ rdx + hexvar ] , cx add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + hexvar ] push rax mov ecx , dword ptr [ rbp + hexvar ] push rcx mov edx , dword ptr [ rbp + num ] push rdx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num test eax , eax je hexvar mov ecx , hexvar int hexvar pop rbp ret
push rbp mov ebp , esp movabs eax , dword ptr fs : [ hexvar ] int3 int3 int3 push rbp mov ebp , esp sub esp , num call hexvar test eax , eax jne hexvar xor al , al jmp hexvar call hexvar mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov edx , hexvar xor eax , eax lock cmpxchg dword ptr [ rdx ] , ecx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov al , num jmp hexvar jmp hexvar xor al , al mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push rcx push rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx edx , word ptr [ rax + hexvar ] and edx , hexvar mov esi , esp mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rax + rdx * num + hexvar ] call rdx cmp esi , esp call hexvar pop rsi add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov edx , dword ptr [ rbp + num ] cmp edx , num ja hexvar mov eax , dword ptr [ rdx * num + hexvar ] mov ecx , dword ptr [ rbp + hexvar ] mov dword ptr [ rdx * num + hexvar ] , ecx pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , ecx mov ecx , dword ptr [ rbp - num ] call hexvar mov eax , dword ptr [ rbp + num ] and eax , num je hexvar push hexvar mov ecx , dword ptr [ rbp - num ] push rcx call hexvar add esp , num mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret num
push rbp mov ebp , esp push rcx mov eax , dword ptr [ rbp + hexvar ] push rax mov ecx , dword ptr [ rbp + hexvar ] push rcx mov edx , dword ptr [ rbp + hexvar ] push rdx mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , hexvar mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp + num ] mov edx , dword ptr [ rcx + num ] and edx , hexvar jne hexvar mov eax , dword ptr [ rbp + num ] cmp dword ptr [ rax ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov ecx , dword ptr [ rbp + num ] mov dword ptr [ rax ] , ecx call hexvar mov edx , dword ptr [ rbp + hexvar ] mov dword ptr [ rax ] , edx call hexvar mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + rdx ] mov byte ptr [ rax + hexvar ] , dl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov eax , hexvar pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov eax , hexvar call hexvar push rsi push rdi lea edi , [ rbp - hexvar ] mov ecx , hexvar mov eax , hexvar rep stosd dword ptr [ rdi ] , eax movabs eax , dword ptr [ hexvar ] cld mov ecx , hexvar call hexvar cmp dword ptr [ rbp + num ] , num jne hexvar mov eax , num shl eax , num mov ecx , dword ptr [ rbp + hexvar ] mov edx , dword ptr [ rcx + rax ] mov dword ptr [ rbp - num ] , edx lea ecx , [ rbp - hexvar ] call hexvar mov eax , dword ptr [ rbp - num ] push rax lea ecx , [ rbp - hexvar ] call hexvar push hexvar push hexvar push hexvar push hexvar push hexvar lea ecx , [ rbp - hexvar ] call hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 mov byte ptr [ rbp - hexvar ] , num mov esi , esp call qword ptr [ rip + hexvar ] cmp esi , esp call hexvar mov dword ptr [ rbp - hexvar ] , eax movzx ecx , byte ptr [ rbp - hexvar ] test ecx , ecx je hexvar lea ecx , [ rbp - hexvar ] call hexvar push rax lea ecx , [ rbp - hexvar ] call hexvar movzx edx , al test edx , edx jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov esi , esp call qword ptr [ rip + hexvar ] cmp esi , esp call hexvar mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] sub ecx , dword ptr [ rbp - hexvar ] cvtsi2ss xmm0 , ecx movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jbe hexvar mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , edx lea ecx , [ rbp - hexvar ] call hexvar push hexvar lea ecx , [ rbp - hexvar ] call hexvar push rax lea ecx , [ rbp - hexvar ] call hexvar jmp hexvar lea ecx , [ rbp - hexvar ] call hexvar jmp hexvar mov esi , esp push hexvar push hexvar movabs eax , dword ptr [ hexvar ]
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + hexvar ] push rax mov ecx , dword ptr [ rbp + hexvar ] push rcx mov edx , dword ptr [ rbp + num ] push rdx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num test eax , eax je hexvar int3 pop rbp ret
push rbp mov ebp , esp sub esp , hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx ] movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rdx + rcx ] sub eax , ecx mov word ptr [ rbp - hexvar ] , ax movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rdx ] movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx edx , byte ptr [ rax + rdx ] cmp ecx , edx jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , num imul ecx , eax , hexvar mov edx , dword ptr [ rbp - num ] mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx + rcx ] , al movzx ecx , word ptr [ rbp - hexvar ] and ecx , hexvar movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rdx ] , cl add esp , hexvar cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp push rcx push hexvar call hexvar add esp , num cmp eax , hexvar je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov ecx , hexvar call hexvar cmp ebp , esp call hexvar pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar mov edx , dword ptr [ rbp - num ] mov word ptr [ rdx + hexvar ] , cx add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov dword ptr [ rip + hexvar ] , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov cl , byte ptr [ rcx + hexvar ] mov byte ptr [ rax + rdx ] , cl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + rdx ] mov byte ptr [ rax + hexvar ] , dl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp push rcx push rbx mov ebx , edx mov dword ptr [ rbp - num ] , ecx push rsi xor esi , esi cmp dword ptr [ rbx ] , esi jle hexvar push rdi xor edi , edi mov ecx , dword ptr [ rbx + num ] mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rcx + rdi ] cmp dword ptr [ rdx + rax - num ] , hexvar jne hexvar mov eax , dword ptr [ rcx + rdi + num ] add eax , edx mov edx , dword ptr [ rbp - num ] cmp dword ptr [ rax + rdx ] , hexvar je hexvar push qword ptr [ rcx + rdi + num ] mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num add edi , hexvar cmp esi , dword ptr [ rbx ] jl hexvar pop rdi pop rsi pop rbx mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp xor eax , eax pop rbp ret
push rbp mov ebp , esp sub esp , hexvar push hexvar push num lea eax , [ rbp - hexvar ] push rax call hexvar add esp , hexvar lea ecx , [ rbp - hexvar ] push rcx call qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] and edx , num je hexvar movzx eax , word ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov dword ptr [ rbp - num ] , hexvar mov ax , word ptr [ rbp - num ] mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rdx ] and ecx , num mov edx , num imul eax , edx , hexvar mov edx , dword ptr [ rbp - num ] mov byte ptr [ rdx + rax ] , cl movzx eax , byte ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + rax ] shr dl , num movzx eax , byte ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov byte ptr [ rcx + rax ] , dl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rcx ] xor ecx , edx movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rdx ] , cl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] cmp eax , num ja hexvar mov eax , dword ptr [ rax * num + hexvar ] pop rbp ret
push rbp mov ebp , esp sub esp , num push rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - num ] mov cl , byte ptr [ rsi + rcx ] mov byte ptr [ rax + rdx ] , cl pop rsi add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rax ] or ecx , hexvar mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rax ] , ecx mov dword ptr [ rax + num ] , edx call hexvar mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rcx ] or edx , num mov eax , dword ptr [ rcx + num ] mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rcx ] , edx mov dword ptr [ rcx + num ] , eax mov esp , ebp pop rbp ret
push rbp mov ebp , esp push rcx push rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx edx , word ptr [ rax + hexvar ] and edx , hexvar mov esi , esp mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rax + rdx * num + hexvar ] call rdx cmp esi , esp call hexvar pop rsi add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp call hexvar push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + num ] push qword ptr [ rax + num ] push qword ptr [ rax ] call hexvar add esp , hexvar test eax , eax jns hexvar or eax , hexvar pop rbp ret
mov eax , num ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp movabs eax , dword ptr [ hexvar ] or eax , hexvar mov dword ptr [ rip + hexvar ] , num pop rbp ret
push rbp mov ebp , esp call hexvar push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] movzx edx , byte ptr [ rcx ] test edx , edx je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar call qword ptr [ rip + hexvar ] cmp dword ptr [ rip + hexvar ] , eax jne hexvar nop mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push num push num push num push num push num call hexvar add esp , hexvar ret
push rbp mov ebp , esp sub esp , hexvar movabs eax , dword ptr [ hexvar ] cld push rsi mov esi , dword ptr [ rbp + num ] push rdi mov edi , dword ptr [ rip + hexvar ] cmp edi , - num je hexvar test esi , esi je hexvar push rsi call hexvar add eax , hexvar add esp , num cmp eax , hexvar ja hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push rsi lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar add esp , hexvar lea eax , [ rbp - hexvar ] jmp hexvar mov eax , hexvar push rax mov eax , dword ptr [ rbp + num ] push num push rdi push rax call hexvar add esp , hexvar mov ecx , dword ptr [ rbp - num ] pop rdi xor ecx , ebp pop rsi call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , ecx push rsi mov esi , dword ptr [ rbp + num ] push rdi test edx , edx je hexvar xor edi , edi cmp dword ptr [ rdx ] , edi jle hexvar push rbx xor ebx , ebx mov esi , edx lea ecx , [ rcx ] mov ecx , dword ptr [ rsi + num ] mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rcx + rbx ] cmp dword ptr [ rdx + rax - num ] , hexvar jne hexvar mov eax , dword ptr [ rcx + rbx + num ] add eax , edx mov edx , dword ptr [ rbp - num ] cmp dword ptr [ rax + rdx ] , hexvar je hexvar push qword ptr [ rcx + rbx + num ] mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num add r11d , hexvar cmp edi , dword ptr [ rsi ] jl hexvar mov esi , dword ptr [ rbp + num ] pop rbx xor edi , edi mov eax , esi test esi , esi je hexvar lea esp , [ rsp ] mov eax , dword ptr [ rax + num ] test r8d , r8d jne hexvar cmp dword ptr [ rsi ] , hexvar jne hexvar cmp dword ptr [ rsi + hexvar ] , hexvar jne hexvar cmp dword ptr [ rsi + hexvar ] , hexvar jne hexvar cmp dword ptr [ rsi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rbp + num ] push rdi push rsi push rax call hexvar add esp , hexvar mov eax , dword ptr [ rsi + hexvar ] cmp dword ptr [ rax + rsi - num ] , hexvar je hexvar mov eax , dword ptr [ rbp + num ] push rdi push rsi push rax call hexvar add esp , hexvar mov esi , dword ptr [ rsi + num ] test r14 , r14 jne hexvar pop rdi pop rsi mov esp , ebp pop rbp ret num
push rbp mov ebp , esp mov ecx , hexvar call hexvar or eax , hexvar cmp ebp , esp call hexvar pop rbp ret
cmp ecx , dword ptr [ rip + hexvar ] jne hexvar ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp push rcx mov eax , dword ptr [ rbp + num ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov eax , hexvar pop rbp ret
push rbp mov ebp , esp mov eax , hexvar pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar push hexvar push num mov eax , dword ptr [ rbp - num ] add eax , hexvar push rax call hexvar add esp , hexvar add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov eax , dword ptr [ rbp + num ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - num ] , ecx mov edx , dword ptr [ rbp - num ] cmp dword ptr [ rdx ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov ecx , dword ptr [ rbp - num ] cmp dword ptr [ rcx + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rbp - num ] cmp dword ptr [ rdx + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , hexvar je hexvar mov ecx , dword ptr [ rbp - num ] cmp dword ptr [ rcx + hexvar ] , hexvar jne hexvar call hexvar mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp + num ] mov ecx , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , ecx call hexvar mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx call hexvar xor eax , eax mov esp , ebp pop rbp ret num
push rbp mov ebp , esp pop rbp ret
push rbp mov ebp , esp call hexvar pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx ] movzx ecx , byte ptr [ rbp - num ] cmp eax , ecx je hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , num mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov cl , byte ptr [ rax + rdx ] mov byte ptr [ rbp - num ] , cl movzx eax , byte ptr [ rbp - num ] cdq mov ecx , hexvar idiv ecx mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rcx + hexvar ] , dl movzx eax , byte ptr [ rbp - num ] cdq mov ecx , hexvar idiv ecx mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] cdq mov ecx , hexvar idiv ecx mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rcx + hexvar ] , dl movzx eax , byte ptr [ rbp - num ] cdq mov ecx , hexvar idiv ecx mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] cdq mov ecx , hexvar idiv ecx mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rcx + hexvar ] , dl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] mov ecx , dword ptr [ rax ] push rcx call hexvar add esp , num mov edx , dword ptr [ rbp + num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp + hexvar ] push rax mov ecx , dword ptr [ rbp + hexvar ] push rcx mov edx , dword ptr [ rbp + hexvar ] push rdx mov eax , dword ptr [ rbp + num ] push rax push hexvar push hexvar call hexvar add esp , hexvar pop rbp ret
push rbp mov ebp , esp sub esp , hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx ] movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rdx + rcx ] add eax , ecx mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] cmp edx , hexvar jbe hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , num imul ecx , eax , hexvar mov edx , dword ptr [ rbp - num ] mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx + rcx ] , al movzx ecx , word ptr [ rbp - hexvar ] and ecx , hexvar movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rdx ] , cl add esp , hexvar cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num cmp ebp , esp call hexvar pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx ] movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rdx + rcx ] cmp eax , ecx jne hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , num mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rcx ] and ecx , edx movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rdx ] , cl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov cl , byte ptr [ rax + rdx ] mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rdx + hexvar ] test ecx , ecx jne hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , num mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar mov word ptr [ rbp - num ] , cx mov edx , num imul eax , edx , num mov ecx , dword ptr [ rbp - num ] movzx edx , byte ptr [ rcx + rax ] movzx eax , word ptr [ rbp - num ] add edx , eax mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , dx add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
movabs eax , dword ptr [ hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] cmp eax , num ja hexvar mov eax , dword ptr [ rax * num + hexvar ] pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num movabs eax , dword ptr [ hexvar ] jge hexvar push qword ptr [ rbp + hexvar ] mov ecx , dword ptr [ rbp + num ] push rcx call hexvar add esp , num jmp hexvar jmp hexvar mov edx , dword ptr [ rbp + num ] mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] push rax push hexvar call hexvar add esp , num mov esp , ebp pop rbp ret
push rbp mov ebp , esp movzx eax , byte ptr [ rip + hexvar ] test eax , eax je hexvar movzx ecx , byte ptr [ rbp + hexvar ] test ecx , ecx je hexvar mov al , num jmp hexvar movzx edx , byte ptr [ rbp + num ] push rdx call hexvar add esp , num movzx eax , byte ptr [ rbp + num ] push rax call hexvar add esp , num mov al , num pop rbp ret
push rbp mov ebp , esp push rcx cmp dword ptr [ rip + hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp xor eax , eax pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov eax , hexvar pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx ] movzx ecx , byte ptr [ rbp - num ] cmp eax , ecx jne hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , num mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num test eax , eax je hexvar int3 pop rbp ret
push rbp mov ebp , esp sub esp , hexvar movabs eax , dword ptr [ hexvar ] cld mov eax , dword ptr [ rbp + num ] push rbx mov ebx , dword ptr [ rbp + hexvar ] push rdi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp edi , - num je hexvar test ebx , ebx jne hexvar push hexvar push num push rdi push rax call hexvar add esp , hexvar pop rdi pop rbx mov ecx , dword ptr [ rbp - num ] xor ecx , ebp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp push rcx push rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx + hexvar ] shl eax , num mov ecx , dword ptr [ rbp - num ] movzx edx , word ptr [ rcx + hexvar ] mov ecx , dword ptr [ rbp - num ] movzx edx , byte ptr [ rcx + rdx + hexvar ] or eax , edx mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , num mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , hexvar mov esi , esp mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rdx + rax * num + hexvar ] call rax cmp esi , esp call hexvar mov ecx , dword ptr [ rbp - num ] movzx edx , byte ptr [ rcx + hexvar ] test edx , edx jle hexvar mov eax , dword ptr [ rbp - num ] mov cl , byte ptr [ rax + hexvar ] sub cl , num mov edx , dword ptr [ rbp - num ] mov byte ptr [ rdx + hexvar ] , cl mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + hexvar ] test ecx , ecx jle hexvar mov edx , dword ptr [ rbp - num ] mov al , byte ptr [ rdx + hexvar ] sub al , num mov ecx , dword ptr [ rbp - num ] mov byte ptr [ rcx + hexvar ] , al pop rsi add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp xor eax , eax pop rbp ret
push rbp mov ebp , esp push rcx cmp dword ptr [ rip + hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret
push rbp mov ebp , esp xor eax , eax pop rbp ret
mov eax , hexvar ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp call hexvar pop rbp ret
push rbp mov ebp , esp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp push rcx mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num test eax , eax je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov al , byte ptr [ rbp - num ] mov byte ptr [ rdx + rcx ] , al add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp push hexvar call qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov ebp , esp call hexvar push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + hexvar ] sub esp , hexvar xor ecx , ecx push rbx push rsi mov esi , dword ptr [ rbp + num ] mov dword ptr [ rax ] , num mov r8 , qword ptr [ rbp + hexvar ] push rdi push hexvar mov word ptr [ rax ] , cx lea eax , [ rbp - hexvar ] push rax push rsi call qword ptr [ rip + hexvar ] test eax , eax je hexvar push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , hexvar cmp word ptr [ rax ] , cx jne hexvar mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx jle hexvar add ecx , eax cmp dword ptr [ rcx ] , hexvar jne hexvar movzx edx , word ptr [ rcx + hexvar ] sub esi , eax movzx edi , word ptr [ rcx + num ] add edx , hexvar xor ebx , ebx xor eax , eax test edi , edi je hexvar add ecx , edx lea ecx , [ rcx ] mov edx , dword ptr [ rcx + num ] cmp esi , edx jb hexvar mov ebx , esi sub ebx , edx cmp esi , dword ptr [ rcx ] jb hexvar add ecx , hexvar cmp eax , edi jb hexvar cmp eax , edi je hexvar cmp byte ptr [ rip + hexvar ] , num mov dword ptr [ rbp - hexvar ] , eax jne hexvar cmp dword ptr [ rip + hexvar ] , num jne hexvar call hexvar movabs dword ptr [ hexvar ] , eax pushfq add al , byte ptr [ rax ] add dh , al add eax , hexvar add ebx , ebp add eax , hexvar add byte ptr [ rax - hexvar ] , ch
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rdx ] and ecx , hexvar shr ecx , num mov edx , num imul eax , edx , hexvar mov edx , dword ptr [ rbp - num ] mov byte ptr [ rdx + rax ] , cl movzx eax , byte ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + rax ] shl dl , num movzx eax , byte ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov byte ptr [ rcx + rax ] , dl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx ] movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rdx + rcx ] cmp eax , ecx jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov edx , num imul eax , edx , hexvar mov ecx , dword ptr [ rbp - num ] mov dl , byte ptr [ rbp - hexvar ] mov byte ptr [ rcx + rax ] , dl movzx eax , byte ptr [ rbp - num ] movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rdx + rcx ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rax ] sub eax , ecx movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov byte ptr [ rdx + rcx ] , al add esp , hexvar cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num call hexvar test eax , eax jne hexvar xor al , al jmp hexvar call hexvar mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov edx , hexvar xor eax , eax lock cmpxchg dword ptr [ rdx ] , ecx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov al , num jmp hexvar jmp hexvar xor al , al mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov al , num pop rbp ret
cmp byte ptr [ rip + hexvar ] , num jne hexvar push num push num push num push num push num mov byte ptr [ rip + hexvar ] , num call hexvar push rax call hexvar add esp , hexvar ret
push rbp mov ebp , esp pop rbp ret
push rbp mov ebp , esp push rbx push rsi mov esi , ecx mov ebx , edx test esi , esi je hexvar test ebx , ebx je hexvar mov edx , dword ptr [ rbp + num ] test edx , edx je hexvar push rdi mov al , hexvar mov edi , esi mov ecx , ebx rep stosb byte ptr [ rdi ] , al mov eax , dword ptr [ rdx ] mov dword ptr [ rsi + num ] , eax mov dword ptr [ rsi + hexvar ] , ebx mov dword ptr [ rdx ] , esi pop rdi pop rsi pop rbx pop rbp ret num
push rbp mov ebp , esp push rcx mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num test eax , eax je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar mov ecx , dword ptr [ rbp + num ] push rcx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] call qword ptr [ rip + hexvar ] call qword ptr [ rbp - num ] add esp , num mov esp , ebp pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp + num ] mov ecx , dword ptr [ rbp + hexvar ] mov edx , dword ptr [ rax ] cmp edx , dword ptr [ rcx ] jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov al , byte ptr [ rbp - num ] add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
push rsi mov esi , hexvar mov eax , esi cmp eax , hexvar jae hexvar push rdi mov edi , dword ptr [ rsi ] test edi , edi je hexvar mov ecx , edi call qword ptr [ rip + hexvar ] call rdi add esi , num cmp esi , hexvar jb hexvar pop rdi pop rsi ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + rcx ] add ecx , edx movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + rdx ] , cl add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp call hexvar test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rbp + num ] test eax , eax je hexvar jmp hexvar xor ecx , ecx mov edx , hexvar xchg dword ptr [ rdx ] , ecx pop rbp ret
push rbp mov ebp , esp mov eax , num pop rbp ret
push rbp mov ebp , esp sub esp , hexvar cmp dword ptr [ rip + hexvar ] , num jge hexvar mov eax , dword ptr [ rbp + num ] jmp hexvar cmp dword ptr [ rbp + num ] , hexvar je hexvar cmp dword ptr [ rbp + num ] , hexvar je hexvar mov eax , dword ptr [ rbp + num ] jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar stmxcsr dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] xor eax , hexvar mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] and ecx , hexvar jne hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - num ] and edx , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar jne hexvar mov eax , hexvar jmp hexvar mov ecx , dword ptr [ rbp - num ] and ecx , hexvar jne hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - num ] and edx , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp + num ] mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ax , word ptr [ rax + hexvar ] mov word ptr [ rdx + rcx * num + hexvar ] , ax mov ecx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + hexvar ] add dl , num mov eax , dword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov ecx , dword ptr [ rbp - num ] movzx edx , word ptr [ rcx + hexvar ] and edx , hexvar mov eax , dword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num test eax , eax je hexvar mov ecx , hexvar int hexvar pop rbp ret
push rbp mov ebp , esp push rcx mov eax , dword ptr [ rbp + hexvar ] push rax mov ecx , dword ptr [ rbp + hexvar ] push rcx mov edx , dword ptr [ rbp + num ] push rdx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num test eax , eax je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar mov ecx , dword ptr [ rbp + num ] push rcx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] call qword ptr [ rip + hexvar ] call qword ptr [ rbp - num ] add esp , num mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp movabs eax , dword ptr [ hexvar ] or eax , hexvar mov dword ptr [ rip + hexvar ] , num pop rbp ret
push rbp mov ebp , esp push rcx call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , ecx mov esp , ebp pop rbp ret
push rbp mov ebp , esp xor eax , eax pop rbp ret
push rbp mov ebp , esp sub esp , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , ecx mov ecx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] and ecx , hexvar shr ecx , num mov byte ptr [ rbp - num ] , cl mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] and eax , hexvar shr eax , num mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx eax , byte ptr [ rdx + rcx ] movzx ecx , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] movzx ecx , byte ptr [ rdx + rcx ] cmp eax , ecx je hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] add eax , num mov ecx , dword ptr [ rbp - num ] mov word ptr [ rcx + hexvar ] , ax add esp , num cmp ebp , esp call hexvar mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov al , num pop rbp ret
push rbp mov ebp , esp xor eax , eax pop rbp ret
push rbp mov ebp , esp call hexvar pop rbp ret
push rbp mov ebp , esp xor eax , eax pop rbp ret
push rbp mov ebp , esp push rcx mov dword ptr [ rbp - num ] , ecx mov esp , ebp pop rbp ret
push rbp mov ebp , esp sub esp , num push num call qword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar xor al , al jmp hexvar mov eax , dword ptr [ rbp - num ] movzx ecx , word ptr [ rax ] cmp ecx , hexvar je hexvar xor al , al jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , dword ptr [ rdx + hexvar ] mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] cmp dword ptr [ rcx ] , hexvar je hexvar xor al , al jmp hexvar mov edx , dword ptr [ rbp - num ] movzx eax , word ptr [ rdx + hexvar ] cmp eax , hexvar je hexvar xor al , al jmp hexvar mov ecx , dword ptr [ rbp - num ] cmp dword ptr [ rcx + hexvar ] , hexvar ja hexvar xor al , al jmp hexvar mov edx , num imul eax , edx , hexvar mov ecx , dword ptr [ rbp - num ] cmp dword ptr [ rcx + rax + hexvar ] , num jne hexvar xor al , al jmp hexvar mov al , num mov esp , ebp pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] jmp qword ptr [ rip + hexvar ] int3 int3 int3 int3 int3 int3 int3 push rbp mov ebp , esp mov eax , dword ptr [ rbp + num ] push rax call hexvar add esp , num pop rbp ret
