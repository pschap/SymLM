,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov ebp , esp sub esp , hexvar movabs eax , dword ptr [ hexvar ] cld push rbx mov ebx , dword ptr [ rbp + num ] push rsi mov esi , dword ptr [ rbp + hexvar ] push rdi mov edi , dword ptr [ rip + hexvar ] cmp edi , - num je hexvar cmp byte ptr [ rsi ] , num je hexvar push rsi call hexvar add eax , hexvar add esp , num cmp eax , hexvar ja hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push rsi lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar add esp , hexvar lea eax , [ rbp - hexvar ] jmp hexvar mov eax , hexvar push rax push num push rdi push rbx call hexvar add esp , hexvar mov ecx , dword ptr [ rbp - num ] pop rdi pop rsi xor ecx , ebp pop rbx call hexvar mov esp , ebp pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov ebp , esp sub esp , hexvar movabs eax , dword ptr [ hexvar ] cld push rbx mov ebx , dword ptr [ rbp + num ] push rsi mov esi , dword ptr [ rbp + hexvar ] push rdi mov edi , dword ptr [ rip + hexvar ] cmp edi , - num je hexvar cmp byte ptr [ rsi ] , num je hexvar push rsi call hexvar add eax , hexvar add esp , num cmp eax , hexvar ja hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push rsi lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar push hexvar lea eax , [ rbp - hexvar ] push hexvar push rax call hexvar add esp , hexvar lea eax , [ rbp - hexvar ] jmp hexvar mov eax , hexvar push rax push num push rdi push rbx call hexvar add esp , hexvar mov ecx , dword ptr [ rbp - num ] pop rdi pop rsi xor ecx , ebp pop rbx call hexvar mov esp , ebp pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov ebp , esp push - num push hexvar push hexvar movabs eax , dword ptr fs : [ hexvar ] push rbx push rsi push rdi movabs eax , dword ptr [ hexvar ]
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov ebp , esp sub esp , num mov eax , dword ptr [ rbp + num ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - num ] , ecx mov edx , dword ptr [ rbp - num ] cmp dword ptr [ rdx ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov ecx , dword ptr [ rbp - num ] cmp dword ptr [ rcx + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rbp - num ] cmp dword ptr [ rdx + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , hexvar je hexvar mov ecx , dword ptr [ rbp - num ] cmp dword ptr [ rcx + hexvar ] , hexvar jne hexvar call hexvar mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp + num ] mov ecx , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , ecx call hexvar mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx call hexvar xor eax , eax mov esp , ebp pop rbp ret num
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
